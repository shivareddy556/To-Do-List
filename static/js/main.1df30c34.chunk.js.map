{"version":3,"sources":["components/App.js","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","completed","concat","type","onChange","target","value","className","map","checked","updatedTodos","toggleComplete","onClick","submitEdits","class","filter","deleteTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAyGeA,G,MAtGH,WAAO,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACTC,EADS,KACFC,EADE,OAEQH,IAAMC,SAAS,IAFvB,mBAETG,EAFS,KAEHC,EAFG,OAGsBL,IAAMC,SAAS,MAHrC,mBAGTK,EAHS,KAGIC,EAHJ,OAIsBP,IAAMC,SAAS,IAJrC,mBAITO,EAJS,KAIIC,EAJJ,KAyDhB,OAnDAT,IAAMU,WAAU,WACd,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACFX,EAASW,KAEV,IAEHd,IAAMU,WAAU,WACd,IAAMC,EAAOI,KAAKE,UAAUf,GAC5BU,aAAaM,QAAQ,QAASP,KAC7B,CAACT,IAyCF,sBAAKiB,GAAG,YAAR,UACE,2CACA,uBAAMC,SAzCV,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdJ,IAAI,IAAIK,MAAOC,UACfC,KAAMtB,EACNuB,WAAW,GAEbxB,EAAS,YAAID,GAAO0B,OAAOL,IAC3BlB,EAAQ,KAgCN,UACE,uBACEwB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOhB,EAAQgB,EAAEU,OAAOC,QAClCA,MAAO5B,IAET,wBAAQ6B,UAAU,OAAOJ,KAAK,SAA9B,oBAED3B,EAAMgC,KAAI,SAAC9B,GAAD,OACT,sBAAmB6B,UAAU,OAA7B,UACE,sBAAKA,UAAU,YAAf,UACE,uBACEJ,KAAK,WACLV,GAAG,YACHgB,QAAS/B,EAAKuB,UACdG,SAAU,kBAvCtB,SAAwBX,GACtB,IAAIiB,EAAe,YAAIlC,GAAOgC,KAAI,SAAC9B,GAIjC,OAHIA,EAAKe,KAAOA,IACdf,EAAKuB,WAAavB,EAAKuB,WAElBvB,KAETD,EAASiC,GAgCiBC,CAAejC,EAAKe,KACpCc,UAAU,WAEX7B,EAAKe,KAAOb,EACX,uBACEuB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOZ,EAAeY,EAAEU,OAAOC,UAG3C,8BAAM5B,EAAKsB,UAGf,sBAAKO,UAAU,eAAf,UACG7B,EAAKe,KAAOb,EACX,wBAAQ2B,UAAU,MAAMK,QAAS,kBA3C7C,SAAqBnB,GACnB,IAAMiB,EAAe,YAAIlC,GAAOgC,KAAI,SAAC9B,GAInC,OAHIA,EAAKe,KAAOA,IACdf,EAAKsB,KAAOlB,GAEPJ,KAETD,EAASiC,GACT7B,EAAe,MAmCkCgC,CAAYnC,EAAKe,KAAxD,oBAEA,wBAAQc,UAAU,MAAMK,QAAS,kBAAM/B,EAAeH,EAAKe,KAA3D,SAAgE,mBAAGqB,MAAM,kBAG3E,wBAAQP,UAAU,aAAaK,QAAS,kBA/DlD,SAAoBnB,GAClB,IAAIiB,EAAe,YAAIlC,GAAOuC,QAAO,SAACrC,GAAD,OAAUA,EAAKe,KAAOA,KAC3DhB,EAASiC,GA6D6CM,CAAWtC,EAAKe,KAA9D,SAAmE,mBAAGqB,MAAM,4BAzBtEpC,EAAKe,YCpEvBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1df30c34.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEditing(null);\n  }\n\n  return (\n    <div id=\"todo-list\">\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange={(e) => setTodo(e.target.value)}\n          value={todo}\n        />\n        <button className=\"btns\" type=\"submit\">Add</button>\n      </form>\n      {todos.map((todo) => (\n        <div key={todo.id} className=\"todo\">\n          <div className=\"todo-text\">\n            <input\n              type=\"checkbox\"\n              id=\"completed\"\n              checked={todo.completed}\n              onChange={() => toggleComplete(todo.id)}\n              className=\"checks\"\n            />\n            {todo.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div>{todo.text}</div>\n            )}\n          </div>\n          <div className=\"todo-actions\">\n            {todo.id === todoEditing ? (\n              <button className=\"btn\" onClick={() => submitEdits(todo.id)}>Update</button>\n            ) : (\n              <button className=\"btn\" onClick={() => setTodoEditing(todo.id)}><i class=\"far fa-edit\"></i></button>\n            )}\n\n            <button className=\"Deleteicon\" onClick={() => deleteTodo(todo.id)}><i class=\"far fa-trash-alt\"></i></button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}